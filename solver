#!/usr/bin/env ruby

require_relative 'sudoku_solver'

if ARGV.empty?
  puts "Usage: "
  puts "\t./solver file_path"
  puts "\t./solver dir_or_file [cycles] [ants] [evaporation]"

  exit 0
end

dir_or_file = ARGV.shift
$cycles = ARGV.shift.to_i || 20
$ants = ARGV.shift.to_i || 4
$evaporation = ARGV.shift.to_f || 0.99

def resolve_dir(dir)
  Dir.foreach(dir) do |item|
    next if item == '.' || item == '..' || item.start_with?('.')

    file_name = "#{dir}/#{item}"
    sudoku = Sudoku.from_file(file_name)

    solver = SudokuSolver.new(sudoku, $cycles, $ants, $evaporation)
    start = Time.now
    solution = solver.solve
    time = ((Time.now - start) * 1000).to_i

    amount = solution.selected
    line = [item, amount, time].join(',')
    base_name = File.basename(dir_or_file, ".*")
    `echo #{line} >> #{base_name}-#{$cycles}_#{$ants}_#{$evaporation}.csv`

    puts "Solucion final para: -------| #{item} |-------"
    puts solution
    puts "----------------------------------------------"
  end
end

if File.directory?(dir_or_file)
  resolve_dir(dir_or_file)
else
  base_name = File.basename(dir_or_file, ".*")
  sum = 0
  runs = 5
  runs.times do |run|
    puts "starting run n: #{run}"
    sudoku = Sudoku.from_file(dir_or_file)
    solver = SudokuSolver.new(sudoku, $cycles, $ants, $evaporation)
    start = Time.now
    solution = solver.solve
    time = ((Time.now - start) * 1000).to_i
    sum += time

    amount = solution.selected
    line = [dir_or_file, amount, time].join(',')
    `echo #{line} >> #{base_name}-#{$cycles}_#{$ants}_#{$evaporation}.csv`

    puts solution
  end
  prom = (sum / runs.to_f).round(2)
  `echo ,,#{prom} >> #{base_name}-#{$cycles}_#{$ants}_#{$evaporation}.csv`

end
